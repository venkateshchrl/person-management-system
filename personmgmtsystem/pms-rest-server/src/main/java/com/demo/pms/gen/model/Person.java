/*
 * Person Record Managment API
 * API for person management system
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.demo.pms.gen.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;

/**
 * Person object
 */
@Schema(description = "Person object")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2020-01-19T07:43:12.012Z[GMT]")public class Person   {
  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("age")
  private Integer age = null;

  @JsonProperty("gender")
  private String gender = null;

  @JsonProperty("favouriteColor")
  private String favouriteColor = null;

  @JsonProperty("hobbies")
  private List<String> hobbies = null;

  public Person firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * First name of the person
   * @return firstName
   **/
  @JsonProperty("firstName")
  @Schema(description = "First name of the person")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Person lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Last name of the person
   * @return lastName
   **/
  @JsonProperty("lastName")
  @Schema(description = "Last name of the person")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Person age(Integer age) {
    this.age = age;
    return this;
  }

  /**
   * Age of the person
   * @return age
   **/
  @JsonProperty("age")
  @Schema(description = "Age of the person")
  public Integer getAge() {
    return age;
  }

  public void setAge(Integer age) {
    this.age = age;
  }

  public Person gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Gender of the person
   * @return gender
   **/
  @JsonProperty("gender")
  @Schema(description = "Gender of the person")
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }

  public Person favouriteColor(String favouriteColor) {
    this.favouriteColor = favouriteColor;
    return this;
  }

  /**
   * Favourite color of the person
   * @return favouriteColor
   **/
  @JsonProperty("favouriteColor")
  @Schema(description = "Favourite color of the person")
  public String getFavouriteColor() {
    return favouriteColor;
  }

  public void setFavouriteColor(String favouriteColor) {
    this.favouriteColor = favouriteColor;
  }

  public Person hobbies(List<String> hobbies) {
    this.hobbies = hobbies;
    return this;
  }

  public Person addHobbiesItem(String hobbiesItem) {
    if (this.hobbies == null) {
      this.hobbies = new ArrayList<String>();
    }
    this.hobbies.add(hobbiesItem);
    return this;
  }

  /**
   * Hobbies of the person
   * @return hobbies
   **/
  @JsonProperty("hobbies")
  @Schema(description = "Hobbies of the person")
  public List<String> getHobbies() {
    return hobbies;
  }

  public void setHobbies(List<String> hobbies) {
    this.hobbies = hobbies;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Person person = (Person) o;
    return Objects.equals(this.firstName, person.firstName) &&
        Objects.equals(this.lastName, person.lastName) &&
        Objects.equals(this.age, person.age) &&
        Objects.equals(this.gender, person.gender) &&
        Objects.equals(this.favouriteColor, person.favouriteColor) &&
        Objects.equals(this.hobbies, person.hobbies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, age, gender, favouriteColor, hobbies);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Person {\n");
    
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    favouriteColor: ").append(toIndentedString(favouriteColor)).append("\n");
    sb.append("    hobbies: ").append(toIndentedString(hobbies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
